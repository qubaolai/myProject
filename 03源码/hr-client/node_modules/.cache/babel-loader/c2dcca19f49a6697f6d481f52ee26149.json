{"remainingRequest":"E:\\VueProject\\hr-client\\node_modules\\babel-loader\\lib\\index.js!E:\\VueProject\\hr-client\\node_modules\\eslint-loader\\index.js??ref--13-0!E:\\VueProject\\hr-client\\src\\utils\\intercepter.js","dependencies":[{"path":"E:\\VueProject\\hr-client\\src\\utils\\intercepter.js","mtime":1576922102407},{"path":"E:\\VueProject\\hr-client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\VueProject\\hr-client\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\VueProject\\hr-client\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCBheGlvcyBmcm9tICJheGlvcyI7CmltcG9ydCB7IE1lc3NhZ2UgfSBmcm9tICJlbGVtZW50LXVpIjsKdmFyIEJBU0VVUkwgPSBwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gInByb2R1Y3Rpb24iID8gIiIgOiAiL2FwaSI7IC8v5Yib5bu6YXhpb3Mg6LWL57uZ5Y+Y6YePaW50ZXJjZXB0Cgp2YXIgaW50ZXJjZXB0ID0gYXhpb3MuY3JlYXRlKHsKICBiYXNlVVJMOiBCQVNFVVJMLAogIHRpbWVvdXQ6IDEwMDAKfSk7IC8vIOa3u+WKoOivt+axguaLpuaIquWZqAoKaW50ZXJjZXB0LmludGVyY2VwdG9ycy5yZXF1ZXN0LnVzZShmdW5jdGlvbiAoY29uZmlnKSB7CiAgLy8g5Zyo5Y+R6YCB6K+35rGC5LmL5YmN5YGa5Lqb5LuA5LmICiAgLy/lpoLmnpzkuI3mmK/nmbvlvZXor7fmsYIs5Zyo6K+35rGC5aS05re75YqgdG9rZW4KICB2YXIgdXJsID0gY29uZmlnLnVybDsKCiAgaWYgKHVybCA9PT0gIi91c2VyL2xvZ2luIikgewogICAgY29uZmlnLmhlYWRlcnNbInRva2VuIl0gPSAidG9rZW4xMjM0dGlvdWRmZ2phZWtsZmciOwogIH0KCiAgcmV0dXJuIGNvbmZpZzsKfSwgZnVuY3Rpb24gKGVycm9yKSB7CiAgLy8g5a+56K+35rGC6ZSZ6K+v5YGa5Lqb5LuA5LmICiAgcmV0dXJuIFByb21pc2UucmVqZWN0KGVycm9yKTsKfSk7IC8vIOa3u+WKoOWTjeW6lOaLpuaIquWZqAoKaW50ZXJjZXB0LmludGVyY2VwdG9ycy5yZXNwb25zZS51c2UoZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgdmFyIGRhdGEgPSByZXNwb25zZS5kYXRhOwoKICBpZiAoZGF0YS5jb2RlICE9PSAyMDApIHsKICAgIE1lc3NhZ2UuZXJyb3IoZGF0YS5tc2cpOwogICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGRhdGEubXNnKTsKICB9IGVsc2UgewogICAgLy/lsIZ0b2tlbuS/neWtmAogICAgLy/ov5Tlm55yZXNwb25zZQogICAgcmV0dXJuIHJlc3BvbnNlOwogIH0KfSwgZnVuY3Rpb24gKGVycm9yKSB7CiAgLy8g5a+55ZON5bqU6ZSZ6K+v5YGa54K55LuA5LmICiAgcmV0dXJuIFByb21pc2UucmVqZWN0KGVycm9yKTsKfSk7CmV4cG9ydCBkZWZhdWx0IGludGVyY2VwdDs="},{"version":3,"sources":["E:/VueProject/hr-client/src/utils/intercepter.js"],"names":["axios","Message","BASEURL","process","env","NODE_ENV","intercept","create","baseURL","timeout","interceptors","request","use","config","url","headers","error","Promise","reject","response","data","code","msg"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,YAAxB;AAEA,IAAMC,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC,EAAxC,GAA6C,MAA7D,C,CACA;;AACA,IAAMC,SAAS,GAAGN,KAAK,CAACO,MAAN,CAAa;AAC7BC,EAAAA,OAAO,EAAEN,OADoB;AAE7BO,EAAAA,OAAO,EAAE;AAFoB,CAAb,CAAlB,C,CAIA;;AACAH,SAAS,CAACI,YAAV,CAAuBC,OAAvB,CAA+BC,GAA/B,CACE,UAASC,MAAT,EAAiB;AACf;AACA;AACA,MAAMC,GAAG,GAAGD,MAAM,CAACC,GAAnB;;AACA,MAAIA,GAAG,KAAK,aAAZ,EAA2B;AACzBD,IAAAA,MAAM,CAACE,OAAP,CAAe,OAAf,IAA0B,yBAA1B;AACD;;AACD,SAAOF,MAAP;AACD,CATH,EAUE,UAASG,KAAT,EAAgB;AACd;AACA,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD,CAbH,E,CAgBA;;AACAV,SAAS,CAACI,YAAV,CAAuBS,QAAvB,CAAgCP,GAAhC,CACE,UAASO,QAAT,EAAmB;AACjB,MAAMC,IAAI,GAAGD,QAAQ,CAACC,IAAtB;;AACA,MAAIA,IAAI,CAACC,IAAL,KAAc,GAAlB,EAAuB;AACrBpB,IAAAA,OAAO,CAACe,KAAR,CAAcI,IAAI,CAACE,GAAnB;AACA,WAAOL,OAAO,CAACC,MAAR,CAAeE,IAAI,CAACE,GAApB,CAAP;AACD,GAHD,MAGO;AACL;AACA;AACA,WAAOH,QAAP;AACD;AACF,CAXH,EAYE,UAASH,KAAT,EAAgB;AACd;AACA,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD,CAfH;AAkBA,eAAeV,SAAf","sourcesContent":["import axios from \"axios\";\r\nimport { Message } from \"element-ui\";\r\n\r\nconst BASEURL = process.env.NODE_ENV === \"production\" ? \"\" : \"/api\";\r\n//创建axios 赋给变量intercept\r\nconst intercept = axios.create({\r\n  baseURL: BASEURL,\r\n  timeout: 1000\r\n});\r\n// 添加请求拦截器\r\nintercept.interceptors.request.use(\r\n  function(config) {\r\n    // 在发送请求之前做些什么\r\n    //如果不是登录请求,在请求头添加token\r\n    const url = config.url;\r\n    if (url === \"/user/login\") {\r\n      config.headers[\"token\"] = \"token1234tioudfgjaeklfg\";\r\n    }\r\n    return config;\r\n  },\r\n  function(error) {\r\n    // 对请求错误做些什么\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// 添加响应拦截器\r\nintercept.interceptors.response.use(\r\n  function(response) {\r\n    const data = response.data;\r\n    if (data.code !== 200) {\r\n      Message.error(data.msg);\r\n      return Promise.reject(data.msg);\r\n    } else {\r\n      //将token保存\r\n      //返回response\r\n      return response;\r\n    }\r\n  },\r\n  function(error) {\r\n    // 对响应错误做点什么\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default intercept;\r\n"]}]}