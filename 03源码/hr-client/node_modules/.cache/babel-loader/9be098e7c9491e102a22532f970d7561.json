{"remainingRequest":"E:\\GitData\\myProject\\03源码\\hr-client\\node_modules\\babel-loader\\lib\\index.js!E:\\GitData\\myProject\\03源码\\hr-client\\node_modules\\eslint-loader\\index.js??ref--13-0!E:\\GitData\\myProject\\03源码\\hr-client\\src\\utils\\intercepter.js","dependencies":[{"path":"E:\\GitData\\myProject\\03源码\\hr-client\\src\\utils\\intercepter.js","mtime":1577019777748},{"path":"E:\\GitData\\myProject\\03源码\\hr-client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\GitData\\myProject\\03源码\\hr-client\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\GitData\\myProject\\03源码\\hr-client\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCBheGlvcyBmcm9tICJheGlvcyI7CmltcG9ydCB7IE1lc3NhZ2UgfSBmcm9tICJlbGVtZW50LXVpIjsKdmFyIEJBU0VVUkwgPSBwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gInByb2R1Y3Rpb24iID8gIiIgOiAiL2FwaSI7IC8v5Yib5bu6YXhpb3Mg6LWL57uZ5Y+Y6YePaW50ZXJjZXB0Cgp2YXIgaW50ZXJjZXB0ID0gYXhpb3MuY3JlYXRlKHsKICBiYXNlVVJMOiBCQVNFVVJMLAogIHRpbWVvdXQ6IDEwMDAwCn0pOyAvLyDmt7vliqDor7fmsYLmi6bmiKrlmagKCmludGVyY2VwdC5pbnRlcmNlcHRvcnMucmVxdWVzdC51c2UoZnVuY3Rpb24gKGNvbmZpZykgewogIC8vIOWcqOWPkemAgeivt+axguS5i+WJjeWBmuS6m+S7gOS5iAogIC8v5aaC5p6c5LiN5piv55m75b2V6K+35rGCLOWcqOivt+axguWktOa3u+WKoHRva2VuCiAgdmFyIHVybCA9IGNvbmZpZy51cmw7CgogIGlmICh1cmwgIT09ICIvdXNlci9sb2dpbiIpIHsKICAgIGNvbmZpZy5oZWFkZXJzWyJ0b2tlbiJdID0gInRva2VuMTIzNHRpb3VkZmdqYWVrbGZnIjsKICB9CgogIHJldHVybiBjb25maWc7Cn0sIGZ1bmN0aW9uIChlcnJvcikgewogIC8vIOWvueivt+axgumUmeivr+WBmuS6m+S7gOS5iAogIHJldHVybiBQcm9taXNlLnJlamVjdChlcnJvcik7Cn0pOyAvLyDmt7vliqDlk43lupTmi6bmiKrlmagKCmludGVyY2VwdC5pbnRlcmNlcHRvcnMucmVzcG9uc2UudXNlKGZ1bmN0aW9uIChyZXNwb25zZSkgewogIHZhciBkYXRhID0gcmVzcG9uc2UuZGF0YTsKCiAgaWYgKGRhdGEuY29kZSAhPT0gMjAwKSB7CiAgICBNZXNzYWdlLmVycm9yKGRhdGEubXNnKTsKICAgIHJldHVybiBQcm9taXNlLnJlamVjdChkYXRhLm1zZyk7CiAgfSBlbHNlIHsKICAgIC8v5bCGdG9rZW7kv53lrZgKICAgIHZhciB0b2tlbiA9IGRhdGEudG9rZW47CiAgICBjb25zb2xlLmxvZyhkYXRhKTsKICAgIGNvbnNvbGUubG9nKCJ0b2tlbiIgKyB0b2tlbik7CiAgICB3aW5kb3cubG9jYWxTdG9yYWdlLnNldEl0ZW0oInRva2VuIiwgZGF0YS5kYXRhLnRva2VuKTsKICAgIHNlc3Npb25TdG9yYWdlW3Rva2VuXTsgLy/ov5Tlm55yZXNwb25zZQoKICAgIHJldHVybiByZXNwb25zZTsKICB9Cn0sIGZ1bmN0aW9uIChlcnJvcikgewogIC8vIOWvueWTjeW6lOmUmeivr+WBmueCueS7gOS5iAogIHJldHVybiBQcm9taXNlLnJlamVjdChlcnJvcik7Cn0pOwpleHBvcnQgZGVmYXVsdCBpbnRlcmNlcHQ7"},{"version":3,"sources":["E:/GitData/myProject/03源码/hr-client/src/utils/intercepter.js"],"names":["axios","Message","BASEURL","process","env","NODE_ENV","intercept","create","baseURL","timeout","interceptors","request","use","config","url","headers","error","Promise","reject","response","data","code","msg","token","console","log","window","localStorage","setItem","sessionStorage"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,YAAxB;AAEA,IAAMC,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC,EAAxC,GAA6C,MAA7D,C,CACA;;AACA,IAAMC,SAAS,GAAGN,KAAK,CAACO,MAAN,CAAa;AAC7BC,EAAAA,OAAO,EAAEN,OADoB;AAE7BO,EAAAA,OAAO,EAAE;AAFoB,CAAb,CAAlB,C,CAIA;;AACAH,SAAS,CAACI,YAAV,CAAuBC,OAAvB,CAA+BC,GAA/B,CACE,UAASC,MAAT,EAAiB;AACf;AACA;AACA,MAAMC,GAAG,GAAGD,MAAM,CAACC,GAAnB;;AACA,MAAIA,GAAG,KAAK,aAAZ,EAA2B;AACzBD,IAAAA,MAAM,CAACE,OAAP,CAAe,OAAf,IAA0B,yBAA1B;AACD;;AACD,SAAOF,MAAP;AACD,CATH,EAUE,UAASG,KAAT,EAAgB;AACd;AACA,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD,CAbH,E,CAgBA;;AACAV,SAAS,CAACI,YAAV,CAAuBS,QAAvB,CAAgCP,GAAhC,CACE,UAASO,QAAT,EAAmB;AACjB,MAAMC,IAAI,GAAGD,QAAQ,CAACC,IAAtB;;AACA,MAAIA,IAAI,CAACC,IAAL,KAAc,GAAlB,EAAuB;AACrBpB,IAAAA,OAAO,CAACe,KAAR,CAAcI,IAAI,CAACE,GAAnB;AACA,WAAOL,OAAO,CAACC,MAAR,CAAeE,IAAI,CAACE,GAApB,CAAP;AACD,GAHD,MAGO;AACL;AACA,QAAMC,KAAK,GAAGH,IAAI,CAACG,KAAnB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAQF,KAApB;AACAG,IAAAA,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,OAA5B,EAAqCR,IAAI,CAACA,IAAL,CAAUG,KAA/C;AACAM,IAAAA,cAAc,CAACN,KAAD,CAAd,CANK,CAOL;;AACA,WAAOJ,QAAP;AACD;AACF,CAhBH,EAiBE,UAASH,KAAT,EAAgB;AACd;AACA,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD,CApBH;AAuBA,eAAeV,SAAf","sourcesContent":["import axios from \"axios\";\r\nimport { Message } from \"element-ui\";\r\n\r\nconst BASEURL = process.env.NODE_ENV === \"production\" ? \"\" : \"/api\";\r\n//创建axios 赋给变量intercept\r\nconst intercept = axios.create({\r\n  baseURL: BASEURL,\r\n  timeout: 10000\r\n});\r\n// 添加请求拦截器\r\nintercept.interceptors.request.use(\r\n  function(config) {\r\n    // 在发送请求之前做些什么\r\n    //如果不是登录请求,在请求头添加token\r\n    const url = config.url;\r\n    if (url !== \"/user/login\") {\r\n      config.headers[\"token\"] = \"token1234tioudfgjaeklfg\";\r\n    }\r\n    return config;\r\n  },\r\n  function(error) {\r\n    // 对请求错误做些什么\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// 添加响应拦截器\r\nintercept.interceptors.response.use(\r\n  function(response) {\r\n    const data = response.data;\r\n    if (data.code !== 200) {\r\n      Message.error(data.msg);\r\n      return Promise.reject(data.msg);\r\n    } else {\r\n      //将token保存\r\n      const token = data.token;\r\n      console.log(data);\r\n      console.log(\"token\"+token);\r\n      window.localStorage.setItem(\"token\", data.data.token);\r\n      sessionStorage[token];\r\n      //返回response\r\n      return response;\r\n    }\r\n  },\r\n  function(error) {\r\n    // 对响应错误做点什么\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default intercept;\r\n"]}]}