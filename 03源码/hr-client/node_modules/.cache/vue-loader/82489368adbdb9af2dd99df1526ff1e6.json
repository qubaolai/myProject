{"remainingRequest":"E:\\VueProject\\hr-client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\VueProject\\hr-client\\src\\views\\Login\\index.vue?vue&type=style&index=0&id=aeba673c&lang=scss&scoped=true&","dependencies":[{"path":"E:\\VueProject\\hr-client\\src\\views\\Login\\index.vue","mtime":1576761231618},{"path":"E:\\VueProject\\hr-client\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\VueProject\\hr-client\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"E:\\VueProject\\hr-client\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"E:\\VueProject\\hr-client\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\VueProject\\hr-client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\VueProject\\hr-client\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQojbG9naW4gew0KICBoZWlnaHQ6IDEwMHZoOw0KICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzQ0YTVmOw0KfQ0KLmxvZ2luLXdyYXAgew0KICB3aWR0aDogMzMwcHg7DQogIG1hcmdpbjogYXV0bzsNCn0NCi5tZW51LXRhYiB7DQogIHRleHQtYWxpZ246IGNlbnRlcjsNCiAgbGkgew0KICAgIGRpc3BsYXk6IGlubGluZS1ibG9jazsNCiAgICB3aWR0aDogODhweDsNCiAgICBsaW5lLWhlaWdodDogMzZweDsNCiAgICBmb250LXNpemU6IDE0cHg7DQogICAgY29sb3I6ICNmZmY7DQogICAgYm9yZGVyLXJhZGl1czogMnB4Ow0KICAgIGN1cnNvcjogcG9pbnRlcjsNCiAgfQ0KICAuY3VycmVudCB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjEpOw0KICB9DQp9DQoubG9naW4tZm9ybSB7DQogIG1hcmdpbi10b3A6IDI5cHg7DQogIGxhYmVsIHsNCiAgICBkaXNwbGF5OiBibG9jazsNCiAgICBtYXJnaW4tYm90dG9tOiAzcHg7DQogICAgZm9udC1zaXplOiAxNHB4Ow0KICAgIGNvbG9yOiAjZmZmOw0KICB9DQogIC5pdGVtLWZyb20gew0KICAgIG1hcmdpbi1ib3R0b206IDEzcHg7DQogIH0NCiAgLmJsb2NrIHsNCiAgICBkaXNwbGF5OiBibG9jazsNCiAgICB3aWR0aDogMTAwJTsNCiAgfQ0KICAubG9naW4tYnRuIHsNCiAgICBtYXJnaW4tdG9wOiAxOXB4Ow0KICB9DQp9DQo="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/Login","sourcesContent":["<template>\r\n  <div id=\"login\">\r\n    <div class=\"login-wrap\">\r\n      <ul class=\"menu-tab\">\r\n        <li\r\n          :class=\"{ current: item.current }\"\r\n          v-for=\"item in menuTab\"\r\n          :key=\"item.id\"\r\n          @click=\"toggleMenu(item)\"\r\n        >\r\n          {{ item.txt }}\r\n        </li>\r\n      </ul>\r\n      <!-- 表单 -->\r\n      <el-form\r\n        :model=\"ruleForm\"\r\n        status-icon\r\n        :rules=\"rules\"\r\n        ref=\"ruleForm\"\r\n        class=\"login-form\"\r\n        size=\"medium\"\r\n      >\r\n        <el-form-item prop=\"username\" class=\"item-from\">\r\n          <label>用户名</label>\r\n          <el-input v-model=\"ruleForm.username\" autocomplete=\"off\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item prop=\"password\" class=\"item-from\">\r\n          <label>密码</label>\r\n          <el-input\r\n            type=\"text\"\r\n            v-model=\"ruleForm.password\"\r\n            autocomplete=\"off\"\r\n            maxlength=\"20\"\r\n            minlength=\"6\"\r\n          ></el-input>\r\n        </el-form-item>\r\n        <el-form-item\r\n          prop=\"confirmPassword\"\r\n          class=\"item-from\"\r\n          v-show=\"pageModel === 'registered'\"\r\n        >\r\n          <label>确认密码</label>\r\n          <el-input\r\n            type=\"text\"\r\n            v-model=\"ruleForm.confirmPassword\"\r\n            autocomplete=\"off\"\r\n            maxlength=\"20\"\r\n            minlength=\"6\"\r\n          ></el-input>\r\n        </el-form-item>\r\n        <el-form-item\r\n          prop=\"age\"\r\n          class=\"item-from\"\r\n          v-show=\"pageModel === 'registered'\"\r\n        >\r\n          <label>邮箱</label>\r\n          <el-row :gutter=\"10\">\r\n            <el-col :span=\"16\">\r\n              <div class=\"grid-content bg-purple\">\r\n                <el-input v-model.number=\"ruleForm.age\"></el-input>\r\n              </div>\r\n            </el-col>\r\n            <el-col :span=\"8\">\r\n              <div class=\"grid-content bg-purple\">\r\n                <el-button type=\"danger\" class=\"block\">获取验证码</el-button>\r\n              </div>\r\n            </el-col>\r\n          </el-row>\r\n        </el-form-item>\r\n        <el-form-item class=\"item-from\">\r\n          <el-button\r\n            type=\"primary\"\r\n            @click=\"submitForm('ruleForm')\"\r\n            class=\"login-btn block\"\r\n            >提交</el-button\r\n          >\r\n        </el-form-item>\r\n      </el-form>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport { reactive } from \"@vue/composition-api\";\r\nimport { stripscript, validatePwd } from \"@/utils/validate\";\r\nexport default {\r\n  name: \"login\",\r\n  setup(props, context) {\r\n    console.log(props);\r\n    console.log(context);\r\n    const menuTab = reactive([\r\n      { txt: \"登录\", current: true, type: \"login\" },\r\n      { txt: \"注册\", current: false, type: \"registered\" }\r\n    ]);\r\n    console.log(menuTab);\r\n  },\r\n  data: function() {\r\n    // var checkAge = (rule, value, callback) => {\r\n    //   if (!value) {\r\n    //     return callback(new Error(\"年龄不能为空\"));\r\n    //   }\r\n    //   setTimeout(() => {\r\n    //     if (!Number.isInteger(value)) {\r\n    //       callback(new Error(\"请输入数字值\"));\r\n    //     } else {\r\n    //       if (value < 18) {\r\n    //         callback(new Error(\"必须年满18岁\"));\r\n    //       } else {\r\n    //         callback();\r\n    //       }\r\n    //     }\r\n    //   }, 1000);\r\n    // };\r\n    var validateUsername = (rule, value, callback) => {\r\n      if (value === \"\" || value === \" \") {\r\n        callback(new Error(\"请输入用户名\"));\r\n      } else {\r\n        callback();\r\n      }\r\n    };\r\n    // 验证密码\r\n    var validatePassword = (rule, value, callback) => {\r\n      // 过滤特殊字符\r\n      this.ruleForm.password = stripscript(value);\r\n      value = this.ruleForm.password;\r\n      // 正则表达式验证密码(加特定字符验证)\r\n      if (value === \"\" || value === \" \") {\r\n        callback(new Error(\"请输入密码\"));\r\n      } else if (!validatePwd(value)) {\r\n        callback(new Error(\"密码为6位字母和数字组合\"));\r\n      } else {\r\n        callback();\r\n      }\r\n    };\r\n    // 验证确认密码\r\n    var validateConfirmPasswordord = (rule, value, callback) => {\r\n      // 如果当前模块为login 不验证确认密码\r\n      if (this.pageModel === \"login\") {\r\n        callback();\r\n      }\r\n      // 过滤特殊字符\r\n      this.ruleForm.confirmPassword = stripscript(value);\r\n      value = this.ruleForm.confirmPassword;\r\n      const pass = this.ruleForm.password;\r\n      // 正则表达式验证密码(加特定字符验证)\r\n      if (value === \"\" || value === \" \") {\r\n        callback(new Error(\"请确认密码\"));\r\n      } else if (value !== pass) {\r\n        callback(new Error(\"两次密码不一致\"));\r\n      } else {\r\n        callback();\r\n      }\r\n    };\r\n    return {\r\n      // 显示验证码区域和确认密码\r\n      pageModel: \"login\",\r\n      // confirmPass: false,\r\n      // menuTab: [\r\n      //   { txt: \"登录\", current: true, type: \"login\" },\r\n      //   { txt: \"注册\", current: false, type: \"registered\" }\r\n      // ],\r\n      ruleForm: {\r\n        username: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\",\r\n        age: \"\"\r\n      },\r\n      rules: {\r\n        username: [{ validator: validateUsername, trigger: \"blur\" }],\r\n        password: [{ validator: validatePassword, trigger: \"blur\" }],\r\n        confirmPassword: [\r\n          { validator: validateConfirmPasswordord, trigger: \"blur\" }\r\n        ]\r\n        // age: [{ validator: checkAge, trigger: \"blur\" }]\r\n      }\r\n    };\r\n  },\r\n  created() {},\r\n  mounted() {},\r\n  methods: {\r\n    toggleMenu(item) {\r\n      this.menuTab.forEach(elem => {\r\n        if (item.type === \"registered\") {\r\n          this.ruleForm.username = \"\";\r\n          this.ruleForm.password = \"\";\r\n        }\r\n        elem.current = false;\r\n        // this.confirmPass = true;\r\n        this.VerificationCode = true;\r\n      });\r\n      // 标签切换\r\n      item.current = true;\r\n      // 修改模块值(登录注册时页面改变)\r\n      this.pageModel = item.type;\r\n    },\r\n    submitForm(formName) {\r\n      this.$refs[formName].validate(valid => {\r\n        if (valid) {\r\n          alert(\"submit!\");\r\n        } else {\r\n          console.log(\"error submit!!\");\r\n          return false;\r\n        }\r\n      });\r\n    }\r\n  }\r\n};\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n#login {\r\n  height: 100vh;\r\n  background-color: #344a5f;\r\n}\r\n.login-wrap {\r\n  width: 330px;\r\n  margin: auto;\r\n}\r\n.menu-tab {\r\n  text-align: center;\r\n  li {\r\n    display: inline-block;\r\n    width: 88px;\r\n    line-height: 36px;\r\n    font-size: 14px;\r\n    color: #fff;\r\n    border-radius: 2px;\r\n    cursor: pointer;\r\n  }\r\n  .current {\r\n    background-color: rgba(0, 0, 0, 0.1);\r\n  }\r\n}\r\n.login-form {\r\n  margin-top: 29px;\r\n  label {\r\n    display: block;\r\n    margin-bottom: 3px;\r\n    font-size: 14px;\r\n    color: #fff;\r\n  }\r\n  .item-from {\r\n    margin-bottom: 13px;\r\n  }\r\n  .block {\r\n    display: block;\r\n    width: 100%;\r\n  }\r\n  .login-btn {\r\n    margin-top: 19px;\r\n  }\r\n}\r\n</style>\r\n<!--\r\n密码加密：\r\n1、在前端预先加密一次\r\n登录的密码：123456（普通字符串）\r\n经过加密后：sha1('123456') == '541216ad5s4f5ds1f5asd4f65asd4' （加密后的字符串）\r\n\r\n\r\n2、后台加密\r\n接收到字符串：'541216ad5s4f5ds1f5asd4f65asd4'\r\n后台再次加密：md5('541216ad5s4f5ds1f5asd4f65asd4') == '8f9qwersd3g165y4d1sf3s1f6aew4'（最终的加密后的密码）\r\n最终新的字符串写入数据库：8f9qwersd3g165y4d1sf3s1f6aew4\r\n\r\n\r\n3、登录\r\n用户名与加密后的密码进行匹配，成功则登录，失败则提示\r\n-->\r\n"]}]}